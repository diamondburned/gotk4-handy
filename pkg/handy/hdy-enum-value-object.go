// Code generated by girgen. DO NOT EDIT.

package handy

import (
	"runtime"
	"unsafe"

	externglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <glib-object.h>
// #include <handy.h>
import "C"

// glib.Type values for hdy-enum-value-object.go.
var GTypeEnumValueObject = externglib.Type(C.hdy_enum_value_object_get_type())

func init() {
	externglib.RegisterGValueMarshalers([]externglib.TypeMarshaler{
		{T: GTypeEnumValueObject, F: marshalEnumValueObject},
	})
}

// EnumValueObjectOverrider contains methods that are overridable.
type EnumValueObjectOverrider interface {
}

type EnumValueObject struct {
	_ [0]func() // equal guard
	*externglib.Object
}

var (
	_ externglib.Objector = (*EnumValueObject)(nil)
)

func classInitEnumValueObjector(gclassPtr, data C.gpointer) {
	C.g_type_class_add_private(gclassPtr, C.gsize(unsafe.Sizeof(uintptr(0))))

	goffset := C.g_type_class_get_instance_private_offset(gclassPtr)
	*(*C.gpointer)(unsafe.Add(unsafe.Pointer(gclassPtr), goffset)) = data

}

func wrapEnumValueObject(obj *externglib.Object) *EnumValueObject {
	return &EnumValueObject{
		Object: obj,
	}
}

func marshalEnumValueObject(p uintptr) (interface{}, error) {
	return wrapEnumValueObject(externglib.ValueFromNative(unsafe.Pointer(p)).Object()), nil
}

// The function returns the following values:
//
func (self *EnumValueObject) Name() string {
	var _arg0 *C.HdyEnumValueObject // out
	var _cret *C.gchar              // in

	_arg0 = (*C.HdyEnumValueObject)(unsafe.Pointer(externglib.InternObject(self).Native()))

	_cret = C.hdy_enum_value_object_get_name(_arg0)
	runtime.KeepAlive(self)

	var _utf8 string // out

	_utf8 = C.GoString((*C.gchar)(unsafe.Pointer(_cret)))

	return _utf8
}

// The function returns the following values:
//
func (self *EnumValueObject) Nick() string {
	var _arg0 *C.HdyEnumValueObject // out
	var _cret *C.gchar              // in

	_arg0 = (*C.HdyEnumValueObject)(unsafe.Pointer(externglib.InternObject(self).Native()))

	_cret = C.hdy_enum_value_object_get_nick(_arg0)
	runtime.KeepAlive(self)

	var _utf8 string // out

	_utf8 = C.GoString((*C.gchar)(unsafe.Pointer(_cret)))

	return _utf8
}

// The function returns the following values:
//
func (self *EnumValueObject) Value() int {
	var _arg0 *C.HdyEnumValueObject // out
	var _cret C.gint                // in

	_arg0 = (*C.HdyEnumValueObject)(unsafe.Pointer(externglib.InternObject(self).Native()))

	_cret = C.hdy_enum_value_object_get_value(_arg0)
	runtime.KeepAlive(self)

	var _gint int // out

	_gint = int(_cret)

	return _gint
}
